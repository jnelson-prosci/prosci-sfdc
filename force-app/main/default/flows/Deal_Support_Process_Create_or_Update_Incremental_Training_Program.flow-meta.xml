<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Set_ITP_Unit_Price</name>
        <label>Set ITP Unit Price</label>
        <locationX>50</locationX>
        <locationY>1163</locationY>
        <assignmentItems>
            <assignToReference>Get_Incremental_Training_Program.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sumTotalIncrementalPricing</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_ITP</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>To set name field manually we have to use record variable, set the Unit Price to the sum of the Total Incremental Pricing fields, set quantity and related PBE which are required fields</description>
        <name>Set_New_ITP_Values</name>
        <label>Set New ITP Values</label>
        <locationX>710</locationX>
        <locationY>2495</locationY>
        <assignmentItems>
            <assignToReference>ITPToCreate.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varITPName</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ITPToCreate.Quantity</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ITPToCreate.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>sumTotalIncrementalPricing</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ITPToCreate.OpportunityId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ITPToCreate.PricebookEntryId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varPricebookEntryId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_ITP</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Pricebook_Entry_Id_Existing</name>
        <label>Set Pricebook Entry Id Existing</label>
        <locationX>578</locationX>
        <locationY>2303</locationY>
        <assignmentItems>
            <assignToReference>varPricebookEntryId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_PBE.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_New_ITP_Values</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Product_Id_Existing</name>
        <label>Set Product Id Existing</label>
        <locationX>578</locationX>
        <locationY>1379</locationY>
        <assignmentItems>
            <assignToReference>varProduct2Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_ITP_Product.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Standard_PB</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Sum_Total_Incremental_Pricing</name>
        <label>Sum Total Incremental Pricing</label>
        <locationX>468</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>sumTotalIncrementalPricing</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_DSPs.Total_Incremental_Pricing__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_DSPs</targetReference>
        </connector>
    </assignments>
    <customErrors>
        <name>Error_Creating_ITP</name>
        <label>Error Creating ITP</label>
        <locationX>1106</locationX>
        <locationY>2711</locationY>
        <customErrorMessages>
            <errorMessage>Flow: Deal Support Process - Create or Update Incremental Training Program
Action: Create ITP
Error: {!$Flow.FaultMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <customErrors>
        <name>Error_Standard_PB_Missing</name>
        <label>Error Standard PB Missing</label>
        <locationX>1370</locationX>
        <locationY>1679</locationY>
        <customErrorMessages>
            <errorMessage>No Standard Pricebook found</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <customErrors>
        <name>Error_Updating_ITP</name>
        <label>Error Updating ITP</label>
        <locationX>314</locationX>
        <locationY>1379</locationY>
        <customErrorMessages>
            <errorMessage>Flow: Deal Support Process - Create or Update Incremental Training Program
Action: Update ITP
Error: {!$Flow.FaultMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <description>Cannot traverse objects to check the record type in entry condition checker</description>
        <name>Decision_5</name>
        <label>Is Training DSP?</label>
        <locationX>1452</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Not Training</defaultConnectorLabel>
        <rules>
            <name>Is_Training</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Training</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Deal_Support_Processes</targetReference>
            </connector>
            <label>Is Training</label>
        </rules>
    </decisions>
    <decisions>
        <name>DSPs_Found</name>
        <label>DSPs Found?</label>
        <locationX>1007</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>No Records</defaultConnectorLabel>
        <rules>
            <name>Found_Records</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Deal_Support_Processes</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_DSPs</targetReference>
            </connector>
            <label>Found Records</label>
        </rules>
    </decisions>
    <decisions>
        <description>No ITP requires a Product, Standard PBE and PBE to exist so we can associate it with the new Opportunity Product</description>
        <name>Incremental_Training_Program_Exists</name>
        <label>Incremental Training Program Exists?</label>
        <locationX>380</locationX>
        <locationY>1055</locationY>
        <defaultConnector>
            <targetReference>Get_ITP_Product</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No ITP</defaultConnectorLabel>
        <rules>
            <name>ITP_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Incremental_Training_Program</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_ITP_Unit_Price</targetReference>
            </connector>
            <label>ITP Exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>PBE is required to insert an Opp Product/OpportunityLineItem</description>
        <name>Pricebook_Entry_Exists</name>
        <label>Pricebook Entry Exists?</label>
        <locationX>710</locationX>
        <locationY>2195</locationY>
        <defaultConnector>
            <targetReference>Create_PBE</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No PBE</defaultConnectorLabel>
        <rules>
            <name>Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_PBE</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Pricebook_Entry_Id_Existing</targetReference>
            </connector>
            <label>PBE Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Product_Exists</name>
        <label>Product Exists?</label>
        <locationX>710</locationX>
        <locationY>1271</locationY>
        <defaultConnector>
            <targetReference>Create_Product2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Product2</defaultConnectorLabel>
        <rules>
            <name>Product2_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_ITP_Product</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Product_Id_Existing</targetReference>
            </connector>
            <label>Product2 Exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>Standard PBE must exist to create PBE</description>
        <name>Standard_PBE_Exists</name>
        <label>Standard PBE Exists?</label>
        <locationX>710</locationX>
        <locationY>1787</locationY>
        <defaultConnector>
            <targetReference>Create_Standard_PBE</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No Standard</defaultConnectorLabel>
        <rules>
            <name>Standard_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Standard_PBE</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_PBE</targetReference>
            </connector>
            <label>Standard Exists</label>
        </rules>
    </decisions>
    <description>When a training DSP&apos;s Total Incremental Pricing value changes, we update or create the Incremental Training Program opportunity product and associate it with the parent Opportunity. This flow sums the Total Incremental Pricing value for all of the parent Opp&apos;s related DSPs which is set as the unit price on the Incremental Training Program Opportunity Product to capture these values</description>
    <environments>Default</environments>
    <interviewLabel>Deal Support Process - Create or Update Incremental Training Program {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Deal Support Process - Create or Update Incremental Training Program</label>
    <loops>
        <name>Loop_DSPs</name>
        <label>Loop DSPs</label>
        <locationX>380</locationX>
        <locationY>647</locationY>
        <collectionReference>Get_Deal_Support_Processes</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Sum_Total_Incremental_Pricing</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_Incremental_Training_Program</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>When no ITP exists we must create the opportunity product</description>
        <name>Create_ITP</name>
        <label>Create ITP</label>
        <locationX>710</locationX>
        <locationY>2603</locationY>
        <faultConnector>
            <targetReference>Error_Creating_ITP</targetReference>
        </faultConnector>
        <inputReference>ITPToCreate</inputReference>
    </recordCreates>
    <recordCreates>
        <description>Add a PBE as it is required to create an Opportunity Product/OpportunityLineItem</description>
        <name>Create_PBE</name>
        <label>Create PBE</label>
        <locationX>842</locationX>
        <locationY>2303</locationY>
        <assignRecordIdToReference>varPricebookEntryId</assignRecordIdToReference>
        <connector>
            <targetReference>Set_New_ITP_Values</targetReference>
        </connector>
        <inputAssignments>
            <field>CurrencyIsoCode</field>
            <value>
                <elementReference>$Record.Opportunity__r.CurrencyIsoCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Pricebook2Id</field>
            <value>
                <elementReference>$Record.Opportunity__r.Pricebook2.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Product2Id</field>
            <value>
                <elementReference>varProduct2Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UnitPrice</field>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </inputAssignments>
        <object>PricebookEntry</object>
    </recordCreates>
    <recordCreates>
        <name>Create_Product2</name>
        <label>Create Product2</label>
        <locationX>842</locationX>
        <locationY>1379</locationY>
        <assignRecordIdToReference>varProduct2Id</assignRecordIdToReference>
        <connector>
            <targetReference>Get_Standard_PB</targetReference>
        </connector>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Name</field>
            <value>
                <elementReference>varITPName</elementReference>
            </value>
        </inputAssignments>
        <object>Product2</object>
    </recordCreates>
    <recordCreates>
        <description>Add a Standard PBE as it is required to generate a PBE</description>
        <name>Create_Standard_PBE</name>
        <label>Create Standard PBE</label>
        <locationX>798</locationX>
        <locationY>1895</locationY>
        <connector>
            <targetReference>Get_PBE</targetReference>
        </connector>
        <inputAssignments>
            <field>CurrencyIsoCode</field>
            <value>
                <elementReference>$Record.Opportunity_Product__r.CurrencyIsoCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Pricebook2Id</field>
            <value>
                <elementReference>Get_Standard_PB.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Product2Id</field>
            <value>
                <elementReference>varProduct2Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UnitPrice</field>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </inputAssignments>
        <object>PricebookEntry</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>Get all the completed Deal Support Processes related to the parent opp to calculate sum of total incremental pricing values</description>
        <name>Get_Deal_Support_Processes</name>
        <label>Get Deal Support Processes</label>
        <locationX>1007</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DSPs_Found</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3 OR 4 OR 5) AND 6</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dates Pending</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Confirmed</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Done - Successful</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </filters>
        <filters>
            <field>Total_Incremental_Pricing__c</field>
            <operator>GreaterThan</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Deal_Support_Process__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Check to see if an opp product named &quot;Incremental Training Program&quot; already exists</description>
        <name>Get_Incremental_Training_Program</name>
        <label>Get Incremental Training Program</label>
        <locationX>380</locationX>
        <locationY>947</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Incremental_Training_Program_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OpportunityId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Opportunity__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>Contains</operator>
            <value>
                <elementReference>varITPName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OpportunityLineItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_ITP_Product</name>
        <label>Get ITP Product</label>
        <locationX>710</locationX>
        <locationY>1163</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Product_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varITPName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Product2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_PBE</name>
        <label>Get PBE</label>
        <locationX>710</locationX>
        <locationY>2087</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Pricebook_Entry_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Product2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_ITP_Product.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Pricebook2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Opportunity__r.Pricebook2.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>CurrencyIsoCode</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Opportunity_Product__r.CurrencyIsoCode</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PricebookEntry</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Standard_PB</name>
        <label>Get Standard PB</label>
        <locationX>710</locationX>
        <locationY>1571</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Standard_PBE</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Error_Standard_PB_Missing</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsStandard</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Pricebook2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Standard_PBE</name>
        <label>Get Standard PBE</label>
        <locationX>710</locationX>
        <locationY>1679</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Standard_PBE_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Pricebook2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Standard_PB.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varITPName</elementReference>
            </value>
        </filters>
        <filters>
            <field>CurrencyIsoCode</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Opportunity_Product__r.CurrencyIsoCode</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PricebookEntry</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Set the unit price to the sum of Total Incremental Pricing values</description>
        <name>Update_ITP</name>
        <label>Update ITP</label>
        <locationX>50</locationX>
        <locationY>1271</locationY>
        <faultConnector>
            <targetReference>Error_Updating_ITP</targetReference>
        </faultConnector>
        <inputReference>Get_Incremental_Training_Program</inputReference>
    </recordUpdates>
    <start>
        <locationX>1326</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Decision_5</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Opportunity__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Deal_Support_Process__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>ITPToCreate</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>OpportunityLineItem</objectType>
    </variables>
    <variables>
        <description>Variable to store the sum of all related DSP Total Incremental Pricing values, this will be used for the &quot;Incremental Training Program&quot;﻿ Opp Product&apos;s unit price.</description>
        <name>sumTotalIncrementalPricing</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>varITPName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Incremental Training Program</stringValue>
        </value>
    </variables>
    <variables>
        <name>varPricebookEntryId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varProduct2Id</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
